# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="q[HXV]Nk7lnC9=VUp0>]6?<WwDgT1<Os6/?1T172nHZFjx^?tE@GQJtEZYd@cpyN"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
#logger.root=ERROR

# Logger used by the framework:
#logger.play=INFO

# Logger provided to your application:
#logger.application=DEBUG

# Simple configuration (by URI)
#mongodb.uri = "mongodb://localhost:27017/reactivemongo-db-blog"

test.application="not-test"
blog.user.name="CHANGE ME!"
blog.user.name=${?USER}

dbplugin = disabled
evolutionplugin = disabled
ehcacheplugin = disabled

#mongodb.default.db = "mydb"
# Optional values
#mongodb.default.host = "127.0.0.1"
#mongodb.default.port = 27017
#mongodb.default.user = "leon"
#mongodb.default.password = "123456"

# MongoURI
# ~~~~~
# a MongoURI can also be used http://www.mongodb.org/display/DOCS/Connections
# mongodb.default.uri = "mongodb://127.0.0.1:27017,mongodb.org:1337/salat-test"

# WriteConcern
# ~~~~~
# Can be any of the following
#
# fsyncsafe - Exceptions are raised for network issues and server errors; Write operations wait for the server to flush data to disk.
# replicassafe - Exceptions are raised for network issues and server errors; waits for at least 2 servers for the write operation.
# safe - Exceptions are raised for network issues and server errors; waits on a server for the write operation.
# normal - Exceptions are raised for network issues but not server errors.

#mongodb.default.writeconcern = "safe"

# Replica sets
# ~~~~~
# http://www.mongodb.org/display/DOCS/Why+Replica+Sets
#
# To user a replicaset instead of a single host, omit optional values and use the configuration below instead.
# Since replica sets use public key authentication, user and password won't work together with the replicaset option.

#mongodb.default.replicaset {
#    host1.host = "10.0.0.1"
#
#    host2.host = "10.0.0.2"
#    host2.port = 27018
#}



#Text
first.header="Play with Scala"
first.text="I have strong background with Java. i have worked a lot with J2EE world. Spring is okeyish framework, but it is very unefficient. XML is not for cool kids. But then I find out Play! It was love at the first sight. And if you add Play and Scala, thats totally cool. so bye bye old school Java frameworks."

second.header="React and Twitter Bootstrap"
second.text="JavaScript is hot. JavaScript is everywhere. I wanted to use React in my new own projects. Also how to add magnificient Twitter Bootstrap to React. With these two cool and effient tool you could make very good looking web sites.."

third.header="Heroku"
third.text="I first steps to cloud computing. I amazed how easy and efficient it is. just 'git push heroku master' and boom everything is up and running. I totally love Heroku"

twitter.link="https://twitter.com/"
twitter.link=${?TWITTER_LINK}
github.link="https://github.com"
github.link=${?GITHUB_LINK}
linkedin.link="https://www.linkedin.com/"
linkedin.link=${?LINKEDIN_LINK}

first.carusel.header="My current tech stack: Play 2.4.1, React, Bootstrap"
first.carusel.text="These are the tech tools I am currently using. Hopefully there is coming more cool dev stuff."

second.carusel.header="Next I want to learn!"
second.carusel.text="Clojure, ClojureSciprt (Regent) and React native"

third.carusel.header="What book I am reading currently"
third.carusel.text="Erik Ries:  Lean Startup"

old.site.url="#"
old.site.url=${?OLD_SITE_URL}
master.thesis.url="#"
master.thesis.url=${?MASTER_THESIS}

year="2015"

comments.json="json/comments.json"
